
module RedmineContacts
  module FieldFormat
    class ContactFormat < RecordList
      add 'contact'
      self.customized_class_names = nil
      self.multiple_supported = false

      def edit_tag(view, tag_id, tag_name, custom_value, options = {})
        contact = Contact.where(id: custom_value.value).first unless custom_value.value.blank?
        view.select_contact_tag(tag_name, contact, options.merge(id: tag_id,
                                                                 add_contact: true,
                                                                 include_blank: !custom_value.custom_field.is_required))
      end                                                           
      def bulk_edit_tag(view, tag_id, tag_name, custom_field, objects, value, options={})
        render_contacts_tag(view, tag_id, tag_name, custom_field, value, options.merge(skip_add: true)) +
          bulk_clear_tag(view, tag_id, tag_name, custom_field, value)
      end

      def query_filter_options(custom_field, query)
        super.merge(type: name.to_sym)
      end

      def validate_custom_value(_custom_value)
        []
      end
    end
  end
end
